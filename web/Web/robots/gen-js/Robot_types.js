//
// Autogenerated by Thrift Compiler (0.9.2)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//


if (typeof artemii === 'undefined') {
  artemii = {};
}
if (typeof artemii.bezguzikov === 'undefined') {
  artemii.bezguzikov = {};
}
if (typeof artemii.bezguzikov.qrealweb === 'undefined') {
  artemii.bezguzikov.qrealweb = {};
}
artemii.bezguzikov.qrealweb.Robot = function(args) {
  this.id = null;
  this.name = null;
  this.ssid = null;
  this.owner = null;
  if (args) {
    if (args.id !== undefined) {
      this.id = args.id;
    }
    if (args.name !== undefined) {
      this.name = args.name;
    }
    if (args.ssid !== undefined) {
      this.ssid = args.ssid;
    }
    if (args.owner !== undefined) {
      this.owner = args.owner;
    }
  }
};
artemii.bezguzikov.qrealweb.Robot.prototype = {};
artemii.bezguzikov.qrealweb.Robot.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.id = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.ssid = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.owner = new User();
        this.owner.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

artemii.bezguzikov.qrealweb.Robot.prototype.write = function(output) {
  output.writeStructBegin('Robot');
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.I32, 1);
    output.writeI32(this.id);
    output.writeFieldEnd();
  }
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 2);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  if (this.ssid !== null && this.ssid !== undefined) {
    output.writeFieldBegin('ssid', Thrift.Type.STRING, 3);
    output.writeString(this.ssid);
    output.writeFieldEnd();
  }
  if (this.owner !== null && this.owner !== undefined) {
    output.writeFieldBegin('owner', Thrift.Type.STRUCT, 4);
    this.owner.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

artemii.bezguzikov.qrealweb.RobotInfo = function(args) {
  this.owner = null;
  this.name = null;
  this.ssid = null;
  this.modelConfig = null;
  this.systemConfig = null;
  this.program = null;
  if (args) {
    if (args.owner !== undefined) {
      this.owner = args.owner;
    }
    if (args.name !== undefined) {
      this.name = args.name;
    }
    if (args.ssid !== undefined) {
      this.ssid = args.ssid;
    }
    if (args.modelConfig !== undefined) {
      this.modelConfig = args.modelConfig;
    }
    if (args.systemConfig !== undefined) {
      this.systemConfig = args.systemConfig;
    }
    if (args.program !== undefined) {
      this.program = args.program;
    }
  }
};
artemii.bezguzikov.qrealweb.RobotInfo.prototype = {};
artemii.bezguzikov.qrealweb.RobotInfo.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.owner = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.ssid = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.modelConfig = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.systemConfig = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRING) {
        this.program = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

artemii.bezguzikov.qrealweb.RobotInfo.prototype.write = function(output) {
  output.writeStructBegin('RobotInfo');
  if (this.owner !== null && this.owner !== undefined) {
    output.writeFieldBegin('owner', Thrift.Type.STRING, 1);
    output.writeString(this.owner);
    output.writeFieldEnd();
  }
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 2);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  if (this.ssid !== null && this.ssid !== undefined) {
    output.writeFieldBegin('ssid', Thrift.Type.STRING, 3);
    output.writeString(this.ssid);
    output.writeFieldEnd();
  }
  if (this.modelConfig !== null && this.modelConfig !== undefined) {
    output.writeFieldBegin('modelConfig', Thrift.Type.STRING, 4);
    output.writeString(this.modelConfig);
    output.writeFieldEnd();
  }
  if (this.systemConfig !== null && this.systemConfig !== undefined) {
    output.writeFieldBegin('systemConfig', Thrift.Type.STRING, 5);
    output.writeString(this.systemConfig);
    output.writeFieldEnd();
  }
  if (this.program !== null && this.program !== undefined) {
    output.writeFieldBegin('program', Thrift.Type.STRING, 6);
    output.writeString(this.program);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

artemii.bezguzikov.qrealweb.RobotWrapper = function(args) {
  this.robot = null;
  this.robotInfo = null;
  this.status = null;
  if (args) {
    if (args.robot !== undefined) {
      this.robot = args.robot;
    }
    if (args.robotInfo !== undefined) {
      this.robotInfo = args.robotInfo;
    }
    if (args.status !== undefined) {
      this.status = args.status;
    }
  }
};
artemii.bezguzikov.qrealweb.RobotWrapper.prototype = {};
artemii.bezguzikov.qrealweb.RobotWrapper.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.robot = new artemii.bezguzikov.qrealweb.Robot();
        this.robot.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.robotInfo = new artemii.bezguzikov.qrealweb.RobotInfo();
        this.robotInfo.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.status = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

artemii.bezguzikov.qrealweb.RobotWrapper.prototype.write = function(output) {
  output.writeStructBegin('RobotWrapper');
  if (this.robot !== null && this.robot !== undefined) {
    output.writeFieldBegin('robot', Thrift.Type.STRUCT, 1);
    this.robot.write(output);
    output.writeFieldEnd();
  }
  if (this.robotInfo !== null && this.robotInfo !== undefined) {
    output.writeFieldBegin('robotInfo', Thrift.Type.STRUCT, 2);
    this.robotInfo.write(output);
    output.writeFieldEnd();
  }
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.STRING, 3);
    output.writeString(this.status);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

artemii.bezguzikov.qrealweb.Message = function(args) {
  this.from = null;
  this.type = null;
  this.robot = null;
  this.user = null;
  this.robots = null;
  if (args) {
    if (args.from !== undefined) {
      this.from = args.from;
    }
    if (args.type !== undefined) {
      this.type = args.type;
    }
    if (args.robot !== undefined) {
      this.robot = args.robot;
    }
    if (args.user !== undefined) {
      this.user = args.user;
    }
    if (args.robots !== undefined) {
      this.robots = args.robots;
    }
  }
};
artemii.bezguzikov.qrealweb.Message.prototype = {};
artemii.bezguzikov.qrealweb.Message.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.from = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.type = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.robot = new artemii.bezguzikov.qrealweb.RobotInfo();
        this.robot.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.user = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.LIST) {
        var _size0 = 0;
        var _rtmp34;
        this.robots = [];
        var _etype3 = 0;
        _rtmp34 = input.readListBegin();
        _etype3 = _rtmp34.etype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var elem6 = null;
          elem6 = new artemii.bezguzikov.qrealweb.RobotInfo();
          elem6.read(input);
          this.robots.push(elem6);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

artemii.bezguzikov.qrealweb.Message.prototype.write = function(output) {
  output.writeStructBegin('Message');
  if (this.from !== null && this.from !== undefined) {
    output.writeFieldBegin('from', Thrift.Type.STRING, 1);
    output.writeString(this.from);
    output.writeFieldEnd();
  }
  if (this.type !== null && this.type !== undefined) {
    output.writeFieldBegin('type', Thrift.Type.STRING, 2);
    output.writeString(this.type);
    output.writeFieldEnd();
  }
  if (this.robot !== null && this.robot !== undefined) {
    output.writeFieldBegin('robot', Thrift.Type.STRUCT, 3);
    this.robot.write(output);
    output.writeFieldEnd();
  }
  if (this.user !== null && this.user !== undefined) {
    output.writeFieldBegin('user', Thrift.Type.STRING, 4);
    output.writeString(this.user);
    output.writeFieldEnd();
  }
  if (this.robots !== null && this.robots !== undefined) {
    output.writeFieldBegin('robots', Thrift.Type.LIST, 5);
    output.writeListBegin(Thrift.Type.STRUCT, this.robots.length);
    for (var iter7 in this.robots)
    {
      if (this.robots.hasOwnProperty(iter7))
      {
        iter7 = this.robots[iter7];
        iter7.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

artemii.bezguzikov.qrealweb.Coordinates = function(args) {
  this.latitude = null;
  this.longitude = null;
  if (args) {
    if (args.latitude !== undefined) {
      this.latitude = args.latitude;
    }
    if (args.longitude !== undefined) {
      this.longitude = args.longitude;
    }
  }
};
artemii.bezguzikov.qrealweb.Coordinates.prototype = {};
artemii.bezguzikov.qrealweb.Coordinates.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.latitude = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.longitude = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

artemii.bezguzikov.qrealweb.Coordinates.prototype.write = function(output) {
  output.writeStructBegin('Coordinates');
  if (this.latitude !== null && this.latitude !== undefined) {
    output.writeFieldBegin('latitude', Thrift.Type.STRING, 1);
    output.writeString(this.latitude);
    output.writeFieldEnd();
  }
  if (this.longitude !== null && this.longitude !== undefined) {
    output.writeFieldBegin('longitude', Thrift.Type.STRING, 2);
    output.writeString(this.longitude);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

